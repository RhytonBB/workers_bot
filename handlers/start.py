from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import (
    ContextTypes, ConversationHandler, CommandHandler,
    MessageHandler, filters
)
from db import get_connection
from models import (
    get_worker_by_telegram_id, get_executor_by_key,
    insert_worker_from_executor, increment_fail_attempts,
    block_executor
)

main_menu_keyboard = ReplyKeyboardMarkup(
    keyboard=[["üìÑ –ú–æ–∏ –∑–∞–∫–∞–∑—ã", "‚úâÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞"]],
    resize_keyboard=True
)
ASK_KEY = 1

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    telegram_id = update.effective_user.id
    conn = get_connection()
    user = get_worker_by_telegram_id(conn, telegram_id)

    if user:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
        await update.message.reply_text(
            "–í—ã —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é.",
            reply_markup=main_menu_keyboard
        )
        return ConversationHandler.END

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω ‚Äî –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ –∫–ª—é—á –∏ —Å–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
    await update.message.reply_text(
        "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞:",
        reply_markup=ReplyKeyboardRemove()
    )
    return ASK_KEY

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–∞
async def check_key(update: Update, context: ContextTypes.DEFAULT_TYPE):
    key = update.message.text.strip()
    nick = update.effective_user.username
    telegram_id = update.effective_user.id

    conn = get_connection()
    executor = get_executor_by_key(conn, key, nick)

    if not executor:
        increment_fail_attempts(conn, nick)
        await update.message.reply_text("–ù–µ–≤–µ—Ä–Ω—ã–π –∫–ª—é—á.")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–ø—ã—Ç–æ–∫
        cur = conn.cursor()
        cur.execute("SELECT fail_attempts FROM executor WHERE telegram_nick = %s", (nick,))
        result = cur.fetchone()
        if result and result[0] >= 3:
            block_executor(conn, nick)
            await update.message.reply_text("–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∏–∑-–∑–∞ 3 –Ω–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫.")
            return ConversationHandler.END
        return ASK_KEY

    # –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    insert_worker_from_executor(conn, executor, telegram_id)
    await update.message.reply_text(
        "‚úÖ –í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é.",
        reply_markup=main_menu_keyboard
    )
    return ConversationHandler.END

# –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
async def ignore_unregistered(update: Update, context: ContextTypes.DEFAULT_TYPE):
    telegram_id = update.effective_user.id
    conn = get_connection()
    worker = get_worker_by_telegram_id(conn, telegram_id)

    if not worker:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è
        await update.message.reply_text(
            "‚ùó –°–Ω–∞—á–∞–ª–∞ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /start"
        )
        return
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω ‚Äî –º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É
    # –î—Ä—É–≥–∏–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã –ø–æ–ª—É—á–∞—Ç —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ

# ConversationHandler –¥–ª—è /start
start_handler = ConversationHandler(
    entry_points=[CommandHandler("start", start)],
    states={
        ASK_KEY: [MessageHandler(filters.TEXT & ~filters.COMMAND, check_key)],
    },
    fallbacks=[],
)

# –•–µ–Ω–¥–ª–µ—Ä —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
# –î–æ–ª–∂–µ–Ω –∏–¥—Ç–∏ –ü–ï–†–í–´–ú –≤ —Ü–µ–ø–æ—á–∫–µ Dispatcher
ignore_handler = MessageHandler(filters.ALL, ignore_unregistered)
