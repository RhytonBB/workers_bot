from telegram import Update
from telegram.ext import ContextTypes, MessageHandler, filters
from config import SUPPORT_CHAT_ID
from db import get_connection
from models import get_worker_by_telegram_id

async def forward_to_support(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    conn = get_connection()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞: –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    worker = get_worker_by_telegram_id(conn, user.id)
    if not worker:
        return  # –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    message = update.message.text
    try:
        await context.bot.send_message(
            chat_id=SUPPORT_CHAT_ID,
            text=f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{user.username} ({user.id}):\n\n{message}"
        )
        await update.message.reply_text("–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.")
    except Exception as e:
        # –º–æ–∂–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫—É –∏–ª–∏ —É–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∞
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è.")
        raise e

support_handler = MessageHandler(filters.TEXT & ~filters.COMMAND, forward_to_support)